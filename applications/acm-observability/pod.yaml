apiVersion: v1
kind: Pod
metadata:
  name: setup-acm-observability
  namespace: openshift-gitops
spec:
  serviceAccountName: openshift-gitops-argocd-application-controller
  restartPolicy: OnFailure
  containers:
    - name: cli
      image: 'quay.io/openshift/origin-cli'
      command:
            - /bin/bash
            - '-c'
      args:
            - >-
              DOCKER_CONFIG_JSON=`oc extract secret/pull-secret -n openshift-config --to=-`
              
              oc create secret generic multiclusterhub-operator-pull-secret -n open-cluster-management-observability --from-literal=.dockerconfigjson="$DOCKER_CONFIG_JSON" --type=kubernetes.io/dockerconfigjson
              
              oc apply -f /etc/config/objectbucketclaim.yaml
              
              while [[ true ]]; do oc -n open-cluster-management-observability get secret acm-observability; if [[ $? -eq 0 ]]; then break; fi; sleep 10; done
              
              export BUCKET_ID=`oc -n open-cluster-management-observability get secret acm-observability -o jsonpath="{.data.AWS_ACCESS_KEY_ID}" | base64 -d`
              
              export BUCKET_SECRET=`oc -n open-cluster-management-observability get secret acm-observability -o jsonpath="{.data.AWS_SECRET_ACCESS_KEY}" | base64 -d`
              
              export BUCKET_NAME=`oc -n open-cluster-management-observability get obc acm-observability -o jsonpath="{.spec.bucketName}"`
              
              sed -e "s/\${BUCKET_NAME}/$BUCKET_NAME/g" -e "s/\${BUCKET_ID}/$BUCKET_ID/g" -e "s/\${BUCKET_SECRET}/$BUCKET_SECRET/g" /etc/config/thanos-object-secret.yaml | oc apply -f -
              
              oc apply -f /etc/config/observability.yaml
      volumeMounts:
      - name: config-volume
        mountPath: /etc/config
  volumes:
    - name: config-volume
      configMap:
        name: acm-observability-config

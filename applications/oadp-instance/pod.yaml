apiVersion: v1
kind: Pod
metadata:
  name: setup-bucket-credentials
  namespace: openshift-oadp
spec:
  serviceAccountName: oadp-operator
  restartPolicy: OnFailure
  containers:
    - name: cli
      image: 'quay.io/openshift/origin-cli'
      command:
            - /bin/bash
            - '-c'
      args:
            - >-             
              set -x
              
              while [[ true ]]; do oc -n openshift-oadp get secret oadp-s3-backup-bucket-rgw; if [[ $? -eq 0 ]]; then break; fi; sleep 10; done
              
              export BUCKET_ID=`oc -n openshift-oadp get secret oadp-s3-backup-bucket-rgw -o jsonpath="{.data.AWS_ACCESS_KEY_ID}" | base64 -d`
              
              export BUCKET_SECRET=`oc -n openshift-oadp get secret oadp-s3-backup-bucket-rgw -o jsonpath="{.data.AWS_SECRET_ACCESS_KEY}" | base64 -d`
                            
              echo "" | awk -v id=$BUCKET_ID -v key=$BUCKET_SECRET '{print "[bucket]"; print "aws_access_key_id="id; print "aws_secret_access_key="key; }'` > /tmp/cloud-rgw

              oc create secret generic oadp-s3-backup-bucket-rgw-velero --from-file=cloud=/tmp/cloud-rgw -n openshift-oadp
              
              while [[ true ]]; do oc -n openshift-oadp get secret oadp-s3-backup-bucket-nooba; if [[ $? -eq 0 ]]; then break; fi; sleep 10; done
              
              export BUCKET_ID=`oc -n openshift-oadp get secret oadp-s3-backup-bucket-nooba -o jsonpath="{.data.AWS_ACCESS_KEY_ID}" | base64 -d`
              
              export BUCKET_SECRET=`oc -n openshift-oadp get secret oadp-s3-backup-bucket-nooba -o jsonpath="{.data.AWS_SECRET_ACCESS_KEY}" | base64 -d`
                            
              echo "" | awk -v id=$BUCKET_ID -v key=$BUCKET_SECRET '{print "[bucket]"; print "aws_access_key_id="id; print "aws_secret_access_key="key; }'` > /tmp/cloud-nooba

              oc create secret generic oadp-s3-backup-bucket-nooba-velero --from-file=cloud=/tmp/cloud-nooba -n openshift-oadp              
---
apiVersion: v1
kind: Pod
metadata:
  name: setup-volumesnapshotclass-labels
  namespace: openshift-storage
spec:
  serviceAccountName: ocs-operator
  restartPolicy: OnFailure
  containers:
    - name: cli
      image: 'quay.io/openshift/origin-cli'
      command:
            - /bin/bash
            - '-c'
      args:
            - >- 
              oc patch volumesnapshotclass ocs-storagecluster-rbdplugin-snapclass -p '{"metadata":{"labels":{"velero.io/csi-volumesnapshot-class":"true"}}}'

              oc patch volumesnapshotclass ocs-storagecluster-cephfsplugin-snapclass -p '{"metadata":{"labels":{"velero.io/csi-volumesnapshot-class":"true"}}}'
